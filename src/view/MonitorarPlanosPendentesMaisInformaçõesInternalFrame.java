/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.text.DateFormat;
import java.util.List;
import model.Planocontingencia;
import model.Planomitigacao;

/**
 *
 * @author Diogo
 */
public class MonitorarPlanosPendentesMaisInformaçõesInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form MonitoracaoTarefasPlanosPendentesJInternalFrame
     */
    List<Planomitigacao> listaPlanoMitigacaoAtualizar;
    List<Planocontingencia> listaPlanoContingenciaAtualizar;
    private int idPlanoAtualizaMitigacao;
    private int idPlanoAtualizaContingencia;
    
    public MonitorarPlanosPendentesMaisInformaçõesInternalFrame() {
        initComponents();
        
    }  
    
    
    
    void preencheTelaParaPlanoDeMitigacao(Planomitigacao planoMitigacao) {
        DateFormat dataFormatada = DateFormat.getDateInstance(DateFormat.MEDIUM);
        String dataStr;
        
        identificacaoDoPlanoJTextField.setText(planoMitigacao.getIdentificacaoPlanoMitigacao());
        responsavelPeloPlanoJTextField.setText(planoMitigacao.getResponsavel());
        if(planoMitigacao.getIdMarcoDoProjeto() ==  null){
            dataStr = dataFormatada.format(planoMitigacao.getIdPontoDeControle().getDataPontoControle());
            dataLimiteJTextField.setText(dataStr);
        }
        else if(planoMitigacao.getIdPontoDeControle() == null){
            dataStr = dataFormatada.format(planoMitigacao.getIdMarcoDoProjeto().getDataMarcoProjeto());
            dataLimiteJTextField.setText(dataStr);
        }
        descricaoJTextArea.setText(planoMitigacao.getDescricaoPlanoMitigacao());
        comoSeraFeitoJTextArea.setText(planoMitigacao.getComoRealizar());
        informacoesAdicionaisJTextArea.setText(planoMitigacao.getInformacoesAdicionais());
    }
        

    void preencheTelaParaPlanoDeContingencia(Planocontingencia planoContigencia) {
        DateFormat dataFormatada = DateFormat.getDateInstance(DateFormat.MEDIUM);
        String dataStr;
        
        identificacaoDoPlanoJTextField.setText(planoContigencia.getIdentificacaoPlanoContingencia());
        responsavelPeloPlanoJTextField.setText(planoContigencia.getResponsavel());
        if(planoContigencia.getIdMarcoDoProjeto() ==  null){
            dataStr = dataFormatada.format(planoContigencia.getIdPontoDeControle().getDataPontoControle());
            dataLimiteJTextField.setText(dataStr);
        }
        else if(planoContigencia.getIdPontoDeControle() == null){
            dataStr = dataFormatada.format(planoContigencia.getIdMarcoDoProjeto().getDataMarcoProjeto());
            dataLimiteJTextField.setText(dataStr);
        }
        descricaoJTextArea.setText(planoContigencia.getDescricaoPlanoContingencia());
        comoSeraFeitoJTextArea.setText(planoContigencia.getComoRealizar());
        informacoesAdicionaisJTextArea.setText(planoContigencia.getInformacoesAdicionais());

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        identificacaoDoPlanoJLabel = new javax.swing.JLabel();
        identificacaoDoPlanoJTextField = new javax.swing.JTextField();
        responsavelPeloPlanoJLabel = new javax.swing.JLabel();
        responsavelPeloPlanoJTextField = new javax.swing.JTextField();
        DataLimiteJLabel = new javax.swing.JLabel();
        dataLimiteJTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricaoJTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        comoSeraFeitoJTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        informacoesAdicionaisJTextArea = new javax.swing.JTextArea();
        fecharInternalFrameJButton = new javax.swing.JButton();

        identificacaoDoPlanoJLabel.setText("Identificação do Plano");

        identificacaoDoPlanoJTextField.setEditable(false);

        responsavelPeloPlanoJLabel.setText("Responsavel");

        responsavelPeloPlanoJTextField.setEditable(false);

        DataLimiteJLabel.setText("Data Limite");

        dataLimiteJTextField.setEditable(false);

        descricaoJTextArea.setEditable(false);
        descricaoJTextArea.setColumns(20);
        descricaoJTextArea.setLineWrap(true);
        descricaoJTextArea.setRows(1);
        descricaoJTextArea.setWrapStyleWord(true);
        descricaoJTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição"));
        jScrollPane1.setViewportView(descricaoJTextArea);

        comoSeraFeitoJTextArea.setEditable(false);
        comoSeraFeitoJTextArea.setColumns(20);
        comoSeraFeitoJTextArea.setLineWrap(true);
        comoSeraFeitoJTextArea.setRows(1);
        comoSeraFeitoJTextArea.setWrapStyleWord(true);
        comoSeraFeitoJTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Como será feito"));
        jScrollPane2.setViewportView(comoSeraFeitoJTextArea);

        informacoesAdicionaisJTextArea.setEditable(false);
        informacoesAdicionaisJTextArea.setColumns(20);
        informacoesAdicionaisJTextArea.setLineWrap(true);
        informacoesAdicionaisJTextArea.setRows(1);
        informacoesAdicionaisJTextArea.setWrapStyleWord(true);
        informacoesAdicionaisJTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Adicionais"));
        jScrollPane3.setViewportView(informacoesAdicionaisJTextArea);

        fecharInternalFrameJButton.setText("Fechar");
        fecharInternalFrameJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharInternalFrameJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(identificacaoDoPlanoJLabel)
                                    .addComponent(responsavelPeloPlanoJLabel)
                                    .addComponent(DataLimiteJLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(identificacaoDoPlanoJTextField)
                                    .addComponent(responsavelPeloPlanoJTextField)
                                    .addComponent(dataLimiteJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(fecharInternalFrameJButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identificacaoDoPlanoJLabel)
                    .addComponent(identificacaoDoPlanoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(responsavelPeloPlanoJLabel)
                    .addComponent(responsavelPeloPlanoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataLimiteJLabel)
                    .addComponent(dataLimiteJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fecharInternalFrameJButton)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecharInternalFrameJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharInternalFrameJButtonActionPerformed
        this.setVisible(false);
        
        identificacaoDoPlanoJTextField.setText("");
        responsavelPeloPlanoJTextField.setText("");
        dataLimiteJTextField.setText("");
        descricaoJTextArea.setText("");
        comoSeraFeitoJTextArea.setText("");
        informacoesAdicionaisJTextArea.setText("");

    }//GEN-LAST:event_fecharInternalFrameJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DataLimiteJLabel;
    private javax.swing.JTextArea comoSeraFeitoJTextArea;
    private javax.swing.JTextField dataLimiteJTextField;
    private javax.swing.JTextArea descricaoJTextArea;
    private javax.swing.JButton fecharInternalFrameJButton;
    private javax.swing.JLabel identificacaoDoPlanoJLabel;
    private javax.swing.JTextField identificacaoDoPlanoJTextField;
    private javax.swing.JTextArea informacoesAdicionaisJTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel responsavelPeloPlanoJLabel;
    private javax.swing.JTextField responsavelPeloPlanoJTextField;
    // End of variables declaration//GEN-END:variables

    void preencheTelaParaPlanoDeMitigacao2(Planomitigacao planoMitigacao) {
        DateFormat dataFormatada = DateFormat.getDateInstance(DateFormat.MEDIUM);
        String dataStr;
        
        identificacaoDoPlanoJTextField.setText(planoMitigacao.getIdentificacaoPlanoMitigacao());
        responsavelPeloPlanoJTextField.setText(planoMitigacao.getResponsavel());
        if(planoMitigacao.getIdMarcoDoProjeto() ==  null){
            dataStr = dataFormatada.format(planoMitigacao.getIdPontoDeControle().getDataPontoControle());
            dataLimiteJTextField.setText(dataStr);
        }
        else if(planoMitigacao.getIdPontoDeControle() == null){
            dataStr = dataFormatada.format(planoMitigacao.getIdMarcoDoProjeto().getDataMarcoProjeto());
            dataLimiteJTextField.setText(dataStr);
        }
        descricaoJTextArea.setText(planoMitigacao.getDescricaoPlanoMitigacao());
        comoSeraFeitoJTextArea.setText(planoMitigacao.getComoRealizar());
        informacoesAdicionaisJTextArea.setText(planoMitigacao.getInformacoesAdicionais());
        
    }
    
}
